=begin
#Wekan REST API

#The REST API allows you to control and extend Wekan with ease.  If you are an end-user and not a dev or a tester, [create an issue](https://github.com/wekan/wekan/issues/new) to request new APIs.  > All API calls in the documentation are made using `curl`.  However, you are free to use Java / Python / PHP / Golang / Ruby / Swift / Objective-C / Rust / Scala / C# or any other programming languages.  # Production Security Concerns When calling a production Wekan server, ensure it is running via HTTPS and has a valid SSL Certificate. The login method requires you to post your username and password in plaintext, which is why we highly suggest only calling the REST login api over HTTPS. Also, few things to note:  * Only call via HTTPS * Implement a timed authorization token expiration strategy * Ensure the calling user only has permissions for what they are calling and no more 

OpenAPI spec version: v4.17

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15-SNAPSHOT

=end

require 'uri'

module SwaggerClient
  class ChecklistItemsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete a checklist item
    # Note: this operation can't be reverted. 
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item to be removed 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2002]
    def delete_checklist_item(board, card, checklist, item, opts = {})
      data, _status_code, _headers = delete_checklist_item_with_http_info(board, card, checklist, item, opts)
      data
    end

    # Delete a checklist item
    # Note: this operation can&#39;t be reverted. 
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item to be removed 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2002, Fixnum, Hash)>] InlineResponse2002 data, response status code and response headers
    def delete_checklist_item_with_http_info(board, card, checklist, item, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ChecklistItemsApi.delete_checklist_item ...'
      end
      # verify the required parameter 'board' is set
      if @api_client.config.client_side_validation && board.nil?
        fail ArgumentError, "Missing the required parameter 'board' when calling ChecklistItemsApi.delete_checklist_item"
      end
      # verify the required parameter 'card' is set
      if @api_client.config.client_side_validation && card.nil?
        fail ArgumentError, "Missing the required parameter 'card' when calling ChecklistItemsApi.delete_checklist_item"
      end
      # verify the required parameter 'checklist' is set
      if @api_client.config.client_side_validation && checklist.nil?
        fail ArgumentError, "Missing the required parameter 'checklist' when calling ChecklistItemsApi.delete_checklist_item"
      end
      # verify the required parameter 'item' is set
      if @api_client.config.client_side_validation && item.nil?
        fail ArgumentError, "Missing the required parameter 'item' when calling ChecklistItemsApi.delete_checklist_item"
      end
      # resource path
      local_var_path = '/api/boards/{board}/cards/{card}/checklists/{checklist}/items/{item}'.sub('{' + 'board' + '}', board.to_s).sub('{' + 'card' + '}', card.to_s).sub('{' + 'checklist' + '}', checklist.to_s).sub('{' + 'item' + '}', item.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['UserSecurity']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2002')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ChecklistItemsApi#delete_checklist_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Edit a checklist item
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :is_finished is the item checked? 
    # @option opts [String] :title the new text of the item 
    # @return [InlineResponse2002]
    def edit_checklist_item(board, card, checklist, item, opts = {})
      data, _status_code, _headers = edit_checklist_item_with_http_info(board, card, checklist, item, opts)
      data
    end

    # Edit a checklist item
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :is_finished is the item checked? 
    # @option opts [String] :title the new text of the item 
    # @return [Array<(InlineResponse2002, Fixnum, Hash)>] InlineResponse2002 data, response status code and response headers
    def edit_checklist_item_with_http_info(board, card, checklist, item, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ChecklistItemsApi.edit_checklist_item ...'
      end
      # verify the required parameter 'board' is set
      if @api_client.config.client_side_validation && board.nil?
        fail ArgumentError, "Missing the required parameter 'board' when calling ChecklistItemsApi.edit_checklist_item"
      end
      # verify the required parameter 'card' is set
      if @api_client.config.client_side_validation && card.nil?
        fail ArgumentError, "Missing the required parameter 'card' when calling ChecklistItemsApi.edit_checklist_item"
      end
      # verify the required parameter 'checklist' is set
      if @api_client.config.client_side_validation && checklist.nil?
        fail ArgumentError, "Missing the required parameter 'checklist' when calling ChecklistItemsApi.edit_checklist_item"
      end
      # verify the required parameter 'item' is set
      if @api_client.config.client_side_validation && item.nil?
        fail ArgumentError, "Missing the required parameter 'item' when calling ChecklistItemsApi.edit_checklist_item"
      end
      # resource path
      local_var_path = '/api/boards/{board}/cards/{card}/checklists/{checklist}/items/{item}'.sub('{' + 'board' + '}', board.to_s).sub('{' + 'card' + '}', card.to_s).sub('{' + 'checklist' + '}', checklist.to_s).sub('{' + 'item' + '}', item.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['multipart/form-data', 'application/json'])

      # form parameters
      form_params = {}
      form_params['isFinished'] = opts[:'is_finished'] if !opts[:'is_finished'].nil?
      form_params['title'] = opts[:'title'] if !opts[:'title'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['UserSecurity']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2002')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ChecklistItemsApi#edit_checklist_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a checklist item
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item 
    # @param [Hash] opts the optional parameters
    # @return [ChecklistItems]
    def get_checklist_item(board, card, checklist, item, opts = {})
      data, _status_code, _headers = get_checklist_item_with_http_info(board, card, checklist, item, opts)
      data
    end

    # Get a checklist item
    # @param board the board ID 
    # @param card the card ID 
    # @param checklist the checklist ID 
    # @param item the ID of the item 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ChecklistItems, Fixnum, Hash)>] ChecklistItems data, response status code and response headers
    def get_checklist_item_with_http_info(board, card, checklist, item, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ChecklistItemsApi.get_checklist_item ...'
      end
      # verify the required parameter 'board' is set
      if @api_client.config.client_side_validation && board.nil?
        fail ArgumentError, "Missing the required parameter 'board' when calling ChecklistItemsApi.get_checklist_item"
      end
      # verify the required parameter 'card' is set
      if @api_client.config.client_side_validation && card.nil?
        fail ArgumentError, "Missing the required parameter 'card' when calling ChecklistItemsApi.get_checklist_item"
      end
      # verify the required parameter 'checklist' is set
      if @api_client.config.client_side_validation && checklist.nil?
        fail ArgumentError, "Missing the required parameter 'checklist' when calling ChecklistItemsApi.get_checklist_item"
      end
      # verify the required parameter 'item' is set
      if @api_client.config.client_side_validation && item.nil?
        fail ArgumentError, "Missing the required parameter 'item' when calling ChecklistItemsApi.get_checklist_item"
      end
      # resource path
      local_var_path = '/api/boards/{board}/cards/{card}/checklists/{checklist}/items/{item}'.sub('{' + 'board' + '}', board.to_s).sub('{' + 'card' + '}', card.to_s).sub('{' + 'checklist' + '}', checklist.to_s).sub('{' + 'item' + '}', item.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['UserSecurity']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ChecklistItems')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ChecklistItemsApi#get_checklist_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
